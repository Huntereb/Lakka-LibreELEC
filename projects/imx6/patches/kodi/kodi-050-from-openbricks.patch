https://github.com/OpenBricks/openbricks/tree/krypton-glibc
https://github.com/OpenBricks/openbricks/tree/krypton-glibc/packages/multimedia/kodi/patches
https://github.com/OpenBricks/openbricks/tree/6a1b18f7749966324962061edc2ab844c23ca330/packages/multimedia/kodi/patches

==============================================================
file 0034-Use-uint32_t-for-physical-addresses.patch
==============================================================

From fc99366e9fb1d9f8c83875cdb604bf707d0cfd29 Mon Sep 17 00:00:00 2001
From: Rudi <r.ihle@s-t.de>
Date: Sat, 24 Sep 2016 15:36:23 +0200
Subject: [PATCH] Use uint32_t for physical addresses

---
 xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecIMX.cpp | 2 +-
 xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecIMX.h   | 2 +-
 xbmc/linux/imx/IMX.h                                        | 2 +-
 3 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecIMX.cpp b/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecIMX.cpp
index e3fa72e..d55a6b7 100644
--- a/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecIMX.cpp
+++ b/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecIMX.cpp
@@ -1198,7 +1198,7 @@
   iHeight     = (((frameInfo->pExtInfo->nFrmHeight) + 15) & ~15);
 
   pVirtAddr   = m_frameBuffer->pbufVirtY;
-  pPhysAddr   = (int)m_frameBuffer->pbufY;
+  pPhysAddr   = (uint32_t)m_frameBuffer->pbufY;
 
 #ifdef IMX_INPUT_FORMAT_I420
   iFormat     = _4CC('I', '4', '2', '0');
diff --git a/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecIMX.h b/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecIMX.h
index 6a4f638..69a74fe 100644
--- a/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecIMX.h
+++ b/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecIMX.h
@@ -187,7 +187,7 @@
   int                            m_fbLineLength;
   int                            m_fbPageSize;
   int                            m_fbPhysSize;
-  int                            m_fbPhysAddr;
+  uint32_t                       m_fbPhysAddr;
   uint8_t                       *m_fbVirtAddr;
   struct fb_var_screeninfo       m_fbVar;
   int                            m_ipuHandle;
diff --git a/xbmc/linux/imx/IMX.h b/xbmc/linux/imx/IMX.h
index 8d13333..7363409 100644
--- a/xbmc/linux/imx/IMX.h
+++ b/xbmc/linux/imx/IMX.h
@@ -182,7 +182,7 @@
 public:
   uint32_t     iWidth;
   uint32_t     iHeight;
-  int          pPhysAddr;
+  uint32_t     pPhysAddr;
   uint8_t     *pVirtAddr;
   int          iFormat;
   double       m_fps;
-- 
1.9.1


==============================================================
file 0035-Fix-page-counting-avoid-compiler-warning.patch
==============================================================

From 3c339bb9e574621d08c7d203582b3130211aff5a Mon Sep 17 00:00:00 2001
From: Rudi <r.ihle@s-t.de>
Date: Sat, 24 Sep 2016 15:39:38 +0200
Subject: [PATCH] Fix page counting, avoid compiler warning

---
 xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecIMX.cpp | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecIMX.cpp b/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecIMX.cpp
index d55a6b7..1ea4922 100644
--- a/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecIMX.cpp
+++ b/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecIMX.cpp
@@ -1562,15 +1562,15 @@ ipu_motion_sel CIMXContext::SetIPUMotion(std::string &strImethod)
 void CIMXContext::Blit(CIMXBuffer *source_p, CIMXBuffer *source, const CRect &srcRect,
                        const CRect &dstRect, uint8_t fieldFmt, int page)
 {
-  static unsigned char pg;
+  static int pg = 0;
 
   if (page == RENDER_TASK_AUTOPAGE)
     page = pg;
-  else if (page < 0 && page >= m_fbPages)
+  else if (page < 0 || page >= m_fbPages)
     return;
 
   IPUTaskPtr ipu(new IPUTask(source_p, source, page));
-  pg = ++pg % m_fbPages;
+  pg = (page + 1) % m_fbPages;
 
 #ifdef IMX_PROFILE_BUFFERS
   unsigned long long before = XbmcThreads::SystemClockMillis();
-- 
1.9.1


==============================================================
file 0042-Honour-forced-aspect-ratio-hint.patch
==============================================================

From 8542fadfce7bfa1c7691403029a81682c389c8c2 Mon Sep 17 00:00:00 2001
From: Rudi <r.ihle@s-t.de>
Date: Mon, 3 Oct 2016 18:08:34 +0200
Subject: [PATCH] Honour forced aspect ratio hint

---
 xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecIMX.cpp | 6 +++++-
 xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecIMX.h   | 1 +
 2 files changed, 6 insertions(+), 1 deletion(-)

diff --git a/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecIMX.cpp b/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecIMX.cpp
index 74f4ae4..155710a 100644
--- a/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecIMX.cpp
+++ b/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecIMX.cpp
@@ -546,6 +546,8 @@
 #endif
 
   m_warnOnce = true;
+  m_forcedWidthHeightRatio = m_hints.forced_aspect ? (65536 * m_hints.aspect) : 0;
+
   switch(m_hints.codec)
   {
   case AV_CODEC_ID_MPEG1VIDEO:
@@ -1160,7 +1162,9 @@
   pDvdVideoPicture->iWidth = pDvdVideoPicture->IMXBuffer->m_pctWidth;
   pDvdVideoPicture->iHeight = pDvdVideoPicture->IMXBuffer->m_pctHeight;
 
-  pDvdVideoPicture->iDisplayWidth = ((pDvdVideoPicture->iWidth * m_frameInfo.pExtInfo->nQ16ShiftWidthDivHeightRatio) + 32767) >> 16;
+  int ratio = m_forcedWidthHeightRatio ? m_forcedWidthHeightRatio : m_frameInfo.pExtInfo->nQ16ShiftWidthDivHeightRatio;
+
+  pDvdVideoPicture->iDisplayWidth = ((pDvdVideoPicture->iWidth * ratio) + 32767) >> 16;
   pDvdVideoPicture->iDisplayHeight = pDvdVideoPicture->iHeight;
 
   pDvdVideoPicture->pts = pDvdVideoPicture->IMXBuffer->GetPts();
diff --git a/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecIMX.h b/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecIMX.h
index 22b34d7..b91cdc2 100644
--- a/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecIMX.h
+++ b/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecIMX.h
@@ -380,6 +380,7 @@
   int                          m_codecControlFlags;
   CCriticalSection             m_signalLock;
   CCriticalSection             m_queuesLock;
+  int                          m_forcedWidthHeightRatio;
 #ifdef DUMP_STREAM
   FILE                        *m_dump;
 #endif
-- 
1.9.1


==============================================================
file 0043-Cleanup-mediainfo-logging.patch
==============================================================

From 5a26b1e3d341dd2591f6315f9fc97b5677105bf8 Mon Sep 17 00:00:00 2001
From: Rudi <r.ihle@s-t.de>
Date: Mon, 3 Oct 2016 18:11:31 +0200
Subject: [PATCH] Cleanup mediainfo logging

---
 .../DVDCodecs/Video/DVDVideoCodecIMX.cpp           | 52 +++++++++++-----------
 1 file changed, 26 insertions(+), 26 deletions(-)

diff --git a/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecIMX.cpp b/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecIMX.cpp
index 155710a..3dc63d5 100644
--- a/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecIMX.cpp
+++ b/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecIMX.cpp
@@ -504,8 +504,6 @@ bool CIMXCodec::Open(CDVDStreamInfo &hints, CDVDCodecOptions &options, std::stri
   }
 
   m_hints = hints;
-  if (g_advancedSettings.CanLogComponent(LOGVIDEO))
-    CLog::Log(LOGDEBUG, "Let's decode with iMX VPU\n");
 
   int param = 0;
   SetVPUParams(VPU_DEC_CONF_INPUTTYPE, &param);
@@ -514,32 +512,31 @@ bool CIMXCodec::Open(CDVDStreamInfo &hints, CDVDCodecOptions &options, std::stri
 #ifdef MEDIAINFO
   if (g_advancedSettings.CanLogComponent(LOGVIDEO))
   {
-    CLog::Log(LOGDEBUG, "Decode: MEDIAINFO: fpsrate %d / fpsscale %d\n", m_hints.fpsrate, m_hints.fpsscale);
-    CLog::Log(LOGDEBUG, "Decode: MEDIAINFO: CodecID %d \n", m_hints.codec);
-    CLog::Log(LOGDEBUG, "Decode: MEDIAINFO: StreamType %d \n", m_hints.type);
-    CLog::Log(LOGDEBUG, "Decode: MEDIAINFO: Level %d \n", m_hints.level);
-    CLog::Log(LOGDEBUG, "Decode: MEDIAINFO: Profile %d \n", m_hints.profile);
-    CLog::Log(LOGDEBUG, "Decode: MEDIAINFO: PTS_invalid %d \n", m_hints.ptsinvalid);
-    CLog::Log(LOGDEBUG, "Decode: MEDIAINFO: Tag %d \n", m_hints.codec_tag);
-    CLog::Log(LOGDEBUG, "Decode: MEDIAINFO: %dx%d \n", m_hints.width,  m_hints.height);
-  }
-  { char str_tag[128]; av_get_codec_tag_string(str_tag, sizeof(str_tag), m_hints.codec_tag);
-      CLog::Log(LOGDEBUG, "Decode: MEDIAINFO: Tag fourcc %s\n", str_tag);
-  }
-  if (m_hints.extrasize)
-  {
-    char buf[4096];
+    CLog::Log(LOGNOTICE, "MEDIAINFO: fpsrate %d / fpsscale %d\n", m_hints.fpsrate, m_hints.fpsscale);
+    CLog::Log(LOGNOTICE, "MEDIAINFO: CodecID %d\n", m_hints.codec);
+    CLog::Log(LOGNOTICE, "MEDIAINFO: StreamType %d\n", m_hints.type);
+    CLog::Log(LOGNOTICE, "MEDIAINFO: Level %d\n", m_hints.level);
+    CLog::Log(LOGNOTICE, "MEDIAINFO: Profile %d\n", m_hints.profile);
+    CLog::Log(LOGNOTICE, "MEDIAINFO: PTS_invalid %d\n", m_hints.ptsinvalid);
+    CLog::Log(LOGNOTICE, "MEDIAINFO: Tag %d\n", m_hints.codec_tag);
+    CLog::Log(LOGNOTICE, "MEDIAINFO: %dx%d\n", m_hints.width,  m_hints.height);
+
+    char str_tag[128];
+    av_get_codec_tag_string(str_tag, sizeof(str_tag), m_hints.codec_tag);
+    CLog::Log(LOGNOTICE, "MEDIAINFO: Tag fourcc %s\n", str_tag);
+  
+    if (m_hints.extrasize)
+    {
+      char buf[4096];
 
-    for (unsigned int i=0; i < m_hints.extrasize; i++)
-      sprintf(buf+i*2, "%02x", ((uint8_t*)m_hints.extradata)[i]);
+      for (unsigned int i=0; i < m_hints.extrasize; i++)
+        sprintf(buf+i*2, "%02x", ((uint8_t*)m_hints.extradata)[i]);
 
-    if (g_advancedSettings.CanLogComponent(LOGVIDEO))
-      CLog::Log(LOGDEBUG, "Decode: MEDIAINFO: %s extradata %d %s\n", *(char*)m_hints.extradata == 1 ? "AnnexB" : "avcC", m_hints.extrasize, buf);
-  }
-  if (g_advancedSettings.CanLogComponent(LOGVIDEO))
-  {
-    CLog::Log(LOGDEBUG, "Decode: MEDIAINFO: %d / %d \n", m_hints.width,  m_hints.height);
-    CLog::Log(LOGDEBUG, "Decode: aspect %f - forced aspect %d\n", m_hints.aspect, m_hints.forced_aspect);
+      CLog::Log(LOGNOTICE, "MEDIAINFO: %s extradata %d %s\n", *(char*)m_hints.extradata == 1 ? "AnnexB" : "avcC", m_hints.extrasize, buf);
+    }
+
+    CLog::Log(LOGNOTICE, "MEDIAINFO: %d / %d\n", m_hints.width,  m_hints.height);
+    CLog::Log(LOGNOTICE, "MEDIAINFO: aspect %f - forced_aspect %d\n", m_hints.aspect, m_hints.forced_aspect);
   }
 #endif
 
@@ -626,6 +623,9 @@ bool CIMXCodec::Open(CDVDStreamInfo &hints, CDVDCodecOptions &options, std::stri
     return false;
   }
 
+  if (g_advancedSettings.CanLogComponent(LOGVIDEO))
+    CLog::Log(LOGNOTICE, "Let's decode with iMX VPU\n");
+
   std::list<EINTERLACEMETHOD> deintMethods({ EINTERLACEMETHOD::VS_INTERLACEMETHOD_AUTO,
                                              EINTERLACEMETHOD::VS_INTERLACEMETHOD_RENDER_BOB });
 
-- 
1.9.1


==============================================================
file 400-Boost-Center-Audio-Channel-on-Downmixing.patch
==============================================================

commit a509bdf1ed001423cad530c2f230937825ff2254
Author: WRXTASY <kodi@Ubuntu.12.04.5>
Date:   Tue Aug 18 09:40:19 2015 +0800

    Boost Center Audio Channel on Downmixing

diff --git a/addons/resource.language.en_gb/resources/strings.po b/addons/resource.language.en_gb/resources/strings.po
index faf423c..cf123fe 100644
--- a/addons/resource.language.en_gb/resources/strings.po
+++ b/addons/resource.language.en_gb/resources/strings.po
@@ -18893,6 +18893,21 @@ msgstr ""
 
 #empty strings from id 37046 to 38009
 
+#: system/settings/settings.xml
+msgctxt "#38007"
+msgid "Boost centre channel when downmixing"
+msgstr ""
+
+#: system/settings/settings.xml
+msgctxt "#38008"
+msgid "Increase this value to make the dialogue louder compared to background sounds when downmixing multichannel audio"
+msgstr ""
+
+#: system/settings/settings.xml
+msgctxt "#38009"
+msgid "%i dB"
+msgstr ""
+
 #: system/settings/rbp.xml
 msgctxt "#38010"
 msgid "GPU accelerated"
diff --git a/system/settings/settings.xml b/system/settings/settings.xml
index 3ef33e0..44a9036 100644
--- a/system/settings/settings.xml
+++ b/system/settings/settings.xml
@@ -2040,6 +2040,18 @@
           </dependencies>
           <control type="toggle" />
         </setting>
+        <setting id="audiooutput.boostcenter" type="integer" label="38007" help="38008">
+          <level>2</level>
+          <default>0</default>
+          <constraints>
+            <minimum>0</minimum>
+            <step>1</step>
+            <maximum>30</maximum>
+          </constraints>
+          <control type="spinner" format="string">
+            <formatlabel>38009</formatlabel>
+          </control>
+        </setting>
         <setting id="audiooutput.processquality" type="integer" label="13505" help="36169">
           <requirement>HAS_AE_QUALITY_LEVELS</requirement>
           <level>2</level>
diff --git a/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAEResampleFFMPEG.cpp b/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAEResampleFFMPEG.cpp
index e4ddf9e..34d0152 100644
--- a/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAEResampleFFMPEG.cpp
+++ b/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAEResampleFFMPEG.cpp
@@ -20,6 +20,7 @@
 
 #include "cores/AudioEngine/Utils/AEUtil.h"
 #include "ActiveAEResampleFFMPEG.h"
+#include "settings/Settings.h"
 #include "utils/log.h"
 
 extern "C" {
@@ -104,6 +105,12 @@ bool CActiveAEResampleFFMPEG::Init(uint64_t dst_chan_layout, int dst_channels, i
   {
      av_opt_set_double(m_pContext, "rematrix_maxval", 1.0, 0);
   }
+  int boost_center = CSettings::GetInstance().GetInt("audiooutput.boostcenter");
+  if (boost_center)
+  {
+    float gain = pow(10.0f, ((float)(-3 + boost_center))/20.0f);
+    av_opt_set_double(m_pContext, "center_mix_level", gain, 0);
+  }
 
   if (remapLayout)
   {

==============================================================
file 53-imx-fix-edid-readout.patch
==============================================================

--- a/xbmc/windowing/egl/EGLNativeTypeIMX.cpp	2016-09-25 15:18:47.780677140 +0200
+++ b/xbmc/windowing/egl/EGLNativeTypeIMX.cpp	2016-09-25 15:18:47.808677141 +0200
@@ -336,67 +336,55 @@
 float CEGLNativeTypeIMX::GetMonitorSAR()
 {
   FILE *f_edid;
-  char *str = NULL;
-  unsigned char p;
-  size_t n;
-  int done = 0;
+  int len;
 
   // kernels <= 3.18 use ./soc0/soc.1 in official imx kernel
   // kernels  > 3.18 use ./soc0/soc
   f_edid = fopen("/sys/devices/soc0/soc/20e0000.hdmi_video/edid", "r");
   if(!f_edid)
     f_edid = fopen("/sys/devices/soc0/soc.1/20e0000.hdmi_video/edid", "r");
+  if(!f_edid)
+    f_edid = fopen("/sys/devices/soc0/soc.0/20e0000.hdmi_video/edid", "r");
 
   if(!f_edid)
     return 0;
 
+  len = fread(m_edid, 1, EDID_MAXSIZE, f_edid);
+  if (len < 128)
+  {
+    fclose(f_edid);
+    return 0;
+  }
+
   // first check if EDID is in binary format by reading 512bytes, compare 1st 8bytes
   // against EDID 1.4 identificator [0x0,0xff,0xff,0xff,0xff,0xff,0xff,0x0]
   // if no match, seek to 0 input file and continue with previous method.
-  if (((done = fread(m_edid, 1, EDID_MAXSIZE, f_edid)) % 128) == 0 && done)
-    if (!memcmp(m_edid, EDID_HEADER, EDID_HEADERSIZE))
-    {
-      fclose(f_edid);
-      return true;
-    }
-
-  done = 0;
-  memset(m_edid, 0, EDID_MAXSIZE);
-  fseek(f_edid, 0L, SEEK_SET);
-  // we need to convert mxc_hdmi output format to binary array
-  // mxc_hdmi provides the EDID as space delimited 1bytes blocks
-  // exported as text with format specifier %x eg:
-  // 0x00 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0x00 0x4C 0x2D 0x7A 0x0A 0x00 0x00 0x00 0x00
-  //
-  // this translates into the inner cycle where we move pointer first
-  // with +2 to skip '0x',
-  // we sscanf actual data (eg FF) into a byte,
-  // we move over the FF and delimiting space with +3
-  //
-  // this parses whole 512 byte long info into internal binary array for future
-  // reference and use. current use is only to grab screen's physical params
-  // at EGL init.
-  while(getline(&str, &n, f_edid) > 0)
+  if (memcmp(m_edid, EDID_HEADER, EDID_HEADERSIZE) != 0)
   {
-    char *c = str;
-    while(*c != '\n' && done < EDID_MAXSIZE)
-    {
-      c += 2;
-      sscanf(c, "%hhx", &p);
-      m_edid[done++] = p;
-      c += 3;
-    }
-    if (str)
-      free(str);
-    str = NULL;
+    // we need to convert mxc_hdmi output format to binary array
+    // mxc_hdmi provides the EDID as space delimited 1bytes blocks
+    // exported as text with format specifier %x eg:
+    // 0x00 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0x00 0x4C 0x2D 0x7A 0x0A 0x00 0x00 0x00 0x00
+    //
+    // this parses whole 512 byte long info into internal binary array for future
+    // reference and use. current use is only to grab screen's physical params
+    // at EGL init.
+    len = 0;
+    fseek(f_edid, 0, SEEK_SET);
+    while (len < EDID_MAXSIZE && fscanf(f_edid, " 0x%2hhx", m_edid + len) == 1)
+        len++;
   }
+
+  if (len < EDID_MAXSIZE)
+    memset(m_edid + len, 0, EDID_MAXSIZE - len);
+
   fclose(f_edid);
 
   // info related to 'Basic display parameters.' is at offset 0x14-0x18.
   // where W is 2nd byte, H 3rd.
-  int cmWidth  = (int)*(m_edid +EDID_STRUCT_DISPLAY +1);
-  int cmHeight = (int)*(m_edid +EDID_STRUCT_DISPLAY +2);
-  if (cmHeight > 0)
+  int cmWidth  = m_edid[EDID_STRUCT_DISPLAY + 1];
+  int cmHeight = m_edid[EDID_STRUCT_DISPLAY + 2];
+  if (cmHeight > 0 && cmWidth > 0)
   {
     float t_sar = (float) cmWidth / cmHeight;
     if (t_sar >= 0.33 && t_sar <= 3.0)

==============================================================
file 55-cec-power-button.diff
==============================================================

--- a/xbmc/peripherals/devices/PeripheralCecAdapter.cpp	2015-10-17 10:00:03.704969969 +0200
+++ b/xbmc/peripherals/devices/PeripheralCecAdapter.cpp	2015-10-17 10:00:03.724969970 +0200
@@ -935,8 +935,14 @@
   case CEC_USER_CONTROL_CODE_POWER:
   case CEC_USER_CONTROL_CODE_POWER_TOGGLE_FUNCTION:
   case CEC_USER_CONTROL_CODE_POWER_OFF_FUNCTION:
-    xbmcKey.iButton = XINPUT_IR_REMOTE_POWER;
-    PushCecKeypress(xbmcKey);
+    // Instead of translating to XINPUT_IR_REMOTE_POWER key, we simulate
+    // CEC_OPCODE_STANDBY to avoid unconditional shutdown with some TVs.
+    {
+      cec_command command;
+      command.opcode = CEC_OPCODE_STANDBY;
+      command.initiator = CECDEVICE_TV;
+      CecCommand(this, &command);
+    }
     break;
   case CEC_USER_CONTROL_CODE_VOLUME_UP:
     xbmcKey.iButton = XINPUT_IR_REMOTE_VOLUME_PLUS;

==============================================================
file 58-kodi-fractional-rates.diff
==============================================================

--- a/xbmc/windowing/egl/EGLNativeTypeIMX.cpp	2015-12-21 17:45:47.575690959 +0100
+++ b/xbmc/windowing/egl/EGLNativeTypeIMX.cpp	2015-12-21 17:45:47.615712478 +0100
@@ -434,7 +434,12 @@
   res->iHeight= h;
   res->iScreenWidth = w;
   res->iScreenHeight= h;
-  res->fRefreshRate = r;
+  
+  if(r == 23 || (r % 10) == 9)
+    res->fRefreshRate = (float)((r + 1) * 1000) / 1001;
+  else
+    res->fRefreshRate = r;
+
   res->dwFlags = p[0] == 'p' ? D3DPRESENTFLAG_PROGRESSIVE : D3DPRESENTFLAG_INTERLACED;
 
   res->iScreen       = 0;

==============================================================
file 59-kodi-cache-embedded-thumbnails.diff
==============================================================

--- a/xbmc/music/MusicThumbLoader.cpp	2016-01-31 15:03:34.251330287 +0100
+++ b/xbmc/music/MusicThumbLoader.cpp	2016-01-31 15:03:34.275330288 +0100
@@ -153,8 +153,11 @@
 
   if (!pItem->HasArt("thumb"))
   {
+    EmbeddedArt ea;
+
     // Look for embedded art
-    if (pItem->HasMusicInfoTag() && !pItem->GetMusicInfoTag()->GetCoverArtInfo().empty())
+    if (pItem->HasMusicInfoTag() && 
+        (!pItem->GetMusicInfoTag()->GetCoverArtInfo().empty() || GetEmbeddedThumb(pItem->GetPath(), ea)))
     {
       // The item has got embedded art but user thumbs overrule, so check for those first
       if (!FillThumb(*pItem, false)) // Check for user thumbs but ignore folder thumbs
@@ -162,6 +165,7 @@
         // No user thumb, use embedded art
         std::string thumb = CTextureUtils::GetWrappedImageURL(pItem->GetPath(), "music");
         pItem->SetArt("thumb", thumb);
+        SetCachedImage(*pItem, "thumb", thumb);
       }
     }
     else

==============================================================
file 60-kodi-accumulate-data-for-visualisation.diff
==============================================================

--- a/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAE.cpp	2015-10-19 08:31:15.000000000 +0200
+++ b/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAE.cpp	2016-02-07 18:32:00.431735589 +0100
@@ -1315,15 +1315,19 @@
       if (!m_vizBuffers && !m_audioCallback.empty())
       {
         AEAudioFormat vizFormat = m_internalFormat;
-        vizFormat.m_channelLayout = AE_CH_LAYOUT_2_0;
-        vizFormat.m_dataFormat = AE_FMT_FLOAT;
-        vizFormat.m_sampleRate = 44100;
+
+        // accumulate samples for the visualization addon
+        if (vizFormat.m_frames < 1536)
+          vizFormat.m_frames = 1536;
 
         // input buffers
-        m_vizBuffersInput = new CActiveAEBufferPool(m_internalFormat);
+        m_vizBuffersInput = new CActiveAEBufferPool(vizFormat);
         m_vizBuffersInput->Create(2000);
 
         // resample buffers
+        vizFormat.m_channelLayout = AE_CH_LAYOUT_2_0;
+        vizFormat.m_dataFormat = AE_FMT_FLOAT;
+        vizFormat.m_sampleRate = 44100;
         m_vizBuffers = new CActiveAEBufferPoolResample(m_internalFormat, vizFormat, m_settings.resampleQuality);
         //! @todo use cache of sync + water level
         m_vizBuffers->Create(2000, false, false);
@@ -2147,18 +2151,33 @@
               m_vizInitialized = true;
             }
 
+            const int vizNumSamples = 512;    // !!! Hack: This should be AUDIO_BUFFER_SIZE (addons/Visualization.h)
             if (!m_vizBuffersInput->m_freeSamples.empty())
             {
-              // copy the samples into the viz input buffer
-              CSampleBuffer *viz = m_vizBuffersInput->GetFreeBuffer();
-              int samples = out->pkt->nb_samples;
-              int bytes = samples * out->pkt->config.channels / out->pkt->planes * out->pkt->bytes_per_sample;
-              for(int i= 0; i < out->pkt->planes; i++)
+              // copy the samples into the viz input buffer	      
+              CSampleBuffer *viz = m_vizBuffersInput->m_freeSamples.front();
+              int samples = std::min(vizNumSamples - viz->pkt->nb_samples, out->pkt->nb_samples);
+
+              // don't copy more than vizNumSamples
+              if (samples > 0)
               {
-                memcpy(viz->pkt->data[i], out->pkt->data[i], bytes);
+                int bytes = samples * out->pkt->config.channels / out->pkt->planes * out->pkt->bytes_per_sample;
+                int offset = viz->pkt->nb_samples * out->pkt->config.channels / out->pkt->planes * out->pkt->bytes_per_sample;
+                for(int i = 0; i < out->pkt->planes; i++)
+                  memcpy(viz->pkt->data[i] + offset, out->pkt->data[i], bytes);
+              }
+
+              // consume complete source packet
+              viz->pkt->nb_samples += out->pkt->nb_samples;
+              if (viz->pkt->nb_samples >= viz->pkt->max_nb_samples)
+              {
+                // set valid sample count
+                viz->pkt->nb_samples = vizNumSamples;
+
+                m_vizBuffersInput->m_freeSamples.pop_front();
+                viz->refCount = 1;
+                m_vizBuffers->m_inputSamples.push_back(viz);
               }
-              viz->pkt->nb_samples = samples;
-              m_vizBuffers->m_inputSamples.push_back(viz);
             }
             else
               CLog::Log(LOGWARNING,"ActiveAE::%s - viz ran out of free buffers", __FUNCTION__);
@@ -2183,7 +2202,12 @@
             }
           }
           else if (m_vizBuffers)
+          {
+            if (!m_vizBuffersInput->m_freeSamples.empty())
+              m_vizBuffersInput->m_freeSamples.front()->pkt->nb_samples = 0;
+
             m_vizBuffers->Flush();
+          }
         }
 
         // mix gui sounds

==============================================================
file 65-fix-cec-dialog-text.diff
==============================================================

--- a/addons/resource.language.en_gb/resources/strings.po	2016-08-06 13:03:04.169879835 +0200
+++ b/addons/resource.language.en_gb/resources/strings.po	2016-08-06 13:03:04.197879836 +0200
@@ -16416,7 +16416,7 @@
 
 #: system/peripherals.xml
 msgctxt "#36026"
-msgid "Devices to also put in standby mode"
+msgid "Switch off the TV when the PC goes to standby"
 msgstr ""
 
 #: xbmc/peripherals/devices/PeripheralCecAdapter.cpp

==============================================================
file 66-fix-buffering-indicator.diff
==============================================================

--- a/xbmc/video/windows/GUIWindowFullScreen.cpp	2016-10-01 14:30:58.000000000 +0200
+++ b/xbmc/video/windows/GUIWindowFullScreen.cpp	2016-10-01 20:02:57.037598834 +0200
@@ -485,14 +485,16 @@
 
 void CGUIWindowFullScreen::Process(unsigned int currentTime, CDirtyRegionList &dirtyregion)
 {
-  if (g_application.m_pPlayer->IsRenderingGuiLayer())
-    MarkDirtyRegion();
+  unsigned int oldDirty = dirtyregion.size();
 
   CGUIWindow::Process(currentTime, dirtyregion);
 
   //! @todo This isn't quite optimal - ideally we'd only be dirtying up the actual video render rect
   //!       which is probably the job of the renderer as it can more easily track resizing etc.
   m_renderRegion.SetRect(0, 0, (float)g_graphicsContext.GetWidth(), (float)g_graphicsContext.GetHeight());
+
+  if (dirtyregion.size() != oldDirty || g_application.m_pPlayer->IsRenderingGuiLayer())
+    dirtyregion.push_back(m_renderRegion);
 }
 
 void CGUIWindowFullScreen::Render()
